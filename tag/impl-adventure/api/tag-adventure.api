public final class cn/altawk/nbt/tag/impl/AdventureAdapter {
	public static final field INSTANCE Lcn/altawk/nbt/tag/impl/AdventureAdapter;
	public final fun adaptFrom (Lnet/kyori/adventure/nbt/BinaryTag;)Lcn/altawk/nbt/tag/NbtTag;
	public final fun adaptTo (Lcn/altawk/nbt/tag/NbtTag;)Lnet/kyori/adventure/nbt/BinaryTag;
	public final fun typeFrom (Lnet/kyori/adventure/nbt/BinaryTagType;)Lcn/altawk/nbt/tag/NbtType;
	public final fun typeTo (Lcn/altawk/nbt/tag/NbtType;)Lnet/kyori/adventure/nbt/BinaryTagType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtByte : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtByte {
	public fun <init> (B)V
	public fun <init> (Lnet/kyori/adventure/nbt/ByteBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtByte;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtByte;
	public fun getContent ()Ljava/lang/Byte;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/ByteBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtByteArray : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtByteArray {
	public fun <init> (Lnet/kyori/adventure/nbt/ByteArrayBinaryTag;)V
	public fun <init> ([B)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtByteArray;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtByteArray;
	public fun get (I)B
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()[B
	public fun getSize ()I
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/ByteArrayBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtCompound : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtCompound {
	public fun <init> (Lnet/kyori/adventure/nbt/CompoundBinaryTag;)V
	public fun clear ()V
	public fun clone ()Lcn/altawk/nbt/tag/NbtCompound;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun cloneShallow ()Lcn/altawk/nbt/tag/NbtCompound;
	public fun contains (Ljava/lang/String;)Z
	public fun get (Ljava/lang/String;)Lcn/altawk/nbt/tag/NbtTag;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Ljava/util/Map;
	public fun getSize ()I
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/CompoundBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
	public fun isEmpty ()Z
	public fun merge (Lcn/altawk/nbt/tag/NbtCompound;Z)Lcn/altawk/nbt/tag/NbtCompound;
	public fun mergeShallow (Lcn/altawk/nbt/tag/NbtCompound;Z)Lcn/altawk/nbt/tag/NbtCompound;
	public fun put (Ljava/lang/String;Lcn/altawk/nbt/tag/NbtTag;)V
	public fun remove (Ljava/lang/String;)V
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtDouble : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtDouble {
	public fun <init> (D)V
	public fun <init> (Lnet/kyori/adventure/nbt/DoubleBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtDouble;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtDouble;
	public fun getContent ()Ljava/lang/Double;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/DoubleBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtFloat : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtFloat {
	public fun <init> (F)V
	public fun <init> (Lnet/kyori/adventure/nbt/FloatBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtFloat;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtFloat;
	public fun getContent ()Ljava/lang/Float;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/FloatBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtInt : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtInt {
	public fun <init> (I)V
	public fun <init> (Lnet/kyori/adventure/nbt/IntBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtInt;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtInt;
	public fun getContent ()Ljava/lang/Integer;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/IntBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtIntArray : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtIntArray {
	public fun <init> (Lnet/kyori/adventure/nbt/IntArrayBinaryTag;)V
	public fun <init> ([I)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtIntArray;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtIntArray;
	public fun get (I)I
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()[I
	public fun getSize ()I
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/IntArrayBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtList : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtList {
	public fun <init> (Lnet/kyori/adventure/nbt/ListBinaryTag;)V
	public fun add (Lcn/altawk/nbt/tag/NbtTag;)V
	public fun clear ()V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtList;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtList;
	public fun contains (Lcn/altawk/nbt/tag/NbtTag;)Z
	public fun get (I)Lcn/altawk/nbt/tag/NbtTag;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Ljava/util/List;
	public fun getElementType ()Lcn/altawk/nbt/tag/NbtType;
	public fun getSize ()I
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/ListBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
	public fun isEmpty ()Z
	public fun removeAt (I)V
	public fun set (ILcn/altawk/nbt/tag/NbtTag;)V
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtLong : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtLong {
	public fun <init> (J)V
	public fun <init> (Lnet/kyori/adventure/nbt/LongBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtLong;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtLong;
	public fun getContent ()Ljava/lang/Long;
	public synthetic fun getContent ()Ljava/lang/Object;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/LongBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtLongArray : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtLongArray {
	public fun <init> (Lnet/kyori/adventure/nbt/LongArrayBinaryTag;)V
	public fun <init> ([J)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtLongArray;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtLongArray;
	public fun get (I)J
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()[J
	public fun getSize ()I
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/LongArrayBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtShort : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtShort {
	public fun <init> (Lnet/kyori/adventure/nbt/ShortBinaryTag;)V
	public fun <init> (S)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtShort;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtShort;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Ljava/lang/Short;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/ShortBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtString : cn/altawk/nbt/tag/impl/AdventureNbtTag, cn/altawk/nbt/tag/NbtString {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Lnet/kyori/adventure/nbt/StringBinaryTag;)V
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtString;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtString;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Ljava/lang/String;
	public synthetic fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getSource ()Lnet/kyori/adventure/nbt/StringBinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

public abstract class cn/altawk/nbt/tag/impl/AdventureNbtTag : cn/altawk/nbt/tag/NbtTag {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public abstract fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class cn/altawk/nbt/tag/impl/AdventureNbtTag$End : cn/altawk/nbt/tag/impl/AdventureNbtTag {
	public static final field INSTANCE Lcn/altawk/nbt/tag/impl/AdventureNbtTag$End;
	public synthetic fun clone ()Lcn/altawk/nbt/tag/NbtTag;
	public fun clone ()Lcn/altawk/nbt/tag/impl/AdventureNbtTag$End;
	public synthetic fun getContent ()Ljava/lang/Object;
	public fun getContent ()Lkotlin/Unit;
	public fun getSource ()Lnet/kyori/adventure/nbt/BinaryTag;
	public fun getType ()Lcn/altawk/nbt/tag/NbtType;
}

